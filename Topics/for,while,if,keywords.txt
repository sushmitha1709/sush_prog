If :
	if statement is the most simple decision-making statement. It is used to decide whether a certain statement 
	or block of statements will be executed or not i.e if a certain condition is true then a block of statement is executed otherwise not.
Else:
	We can use the else statement with if statement to execute a block of code when the condition is false. 
	
Keywordds:
	Keywords in Python are reserved words that can not be used as a variable name, function name, or any other identifier.
	
	35 keywords

	['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 
	'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 
	'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']
	
	Boolean: 
		true, false, none
	logical operators: 
		and, or, not, in, is
	Iteration Keywords: 
		for, while, break, continue
	conditional keywords: 
		if,else,elif
	def: 
		used for user defined functions
	Return Keywords: 
		return(functions), yield(generators)
	as:
		as keyword is used to create the alias for the module imported. i.e giving a new name to the imported module. 
		E.g import math as mymath.
	pass:
		pass is the null statement in python. Nothing happens when this is encountered. This is used to prevent indentation 
		errors and used as a placeholder.
	Lambda:
		Lambda keyword is used to make inline returning functions with no statements allowed internally.
	import : 
		This statement is used to include a particular module into current program.
	from : 	
		Generally used with import, from is used to import particular functionality from the module imported.
	Exception Handling Keywords –
		 try, except, raise, finally, and assert
	try : 
		This keyword is used for exception handling, used to catch the errors in the code using the keyword except. 
		Code in “try” block is checked, if there is any type of error, except block is executed.
	except : 
		As explained above, this works together with “try” to catch exceptions.
	finally : 
		No matter what is result of the “try” block, block termed “finally” is always executed.
	raise: 
		We can raise an exception explicitly with the raise keyword
	assert: 
		This function is used for debugging purposes. Usually used to check the correctness of code. 
		If a statement is evaluated to be true, nothing happens, but when it is false, “AssertionError” is raised. 
		One can also print a message with the error, separated by a comma.
	global: 
		This keyword is used to define a variable inside the function to be of a global scope.